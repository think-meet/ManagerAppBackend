# name: Build, Push and Deploy with Manual Approval 

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#     types:
#       - closed

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: mehtameet2802/manager:latest

#   manual-approval:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     environment: production  # Requires approval in GitHub Environments
#     steps:
#       - name: Wait for Manual Approval
#         run: echo "Waiting for manual approval. Approve this job in GitHub Actions."

#   deploy:
#     needs: manual-approval
#     runs-on: ubuntu-latest

#     steps:
#       - name: Connect to EC2 and Deploy
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             # docker and docker compose must be preinstalled on the server

#             # Go to the project directory
#             cd /home/ubuntu/manager  
            
#             # Stop and remove existing containers safely
#             sudo docker compose down || true  
#             sudo docker stop $(sudo docker ps -aq) || true
#             sudo docker rm $(sudo docker ps -aq) || true
            
#             # Remove all existing images (forces deletion even if used)
#             sudo docker rmi -f $(sudo docker images -q) || true  
            
#             # Pull the latest image
#             sudo docker pull mehtameet2802/manager:latest  
            
#             # Start the containers with latest image
#             sudo docker compose up -d --pull always

name: Build, Push and Deploy with Manual Approval 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: mehtameet2802/manager:latest

  manual-approval:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production  # Requires approval in GitHub Environments
    steps:
      - name: Wait for Manual Approval
        run: echo "Waiting for manual approval. Approve this job in GitHub Actions."

  deploy:
    needs: manual-approval
    runs-on: ubuntu-latest

    steps:
      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/manager/"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Go to project directory
            cd /home/ubuntu/manager  

            # Stop and remove existing containers safely
            sudo docker compose down || true  
            sudo docker stop $(sudo docker ps -aq) || true
            sudo docker rm $(sudo docker ps -aq) || true
            
            # Remove all existing images (forces deletion even if used)
            sudo docker rmi -f $(sudo docker images -q) || true  
            
            # Pull the latest image
            sudo docker pull mehtameet2802/manager:latest  
            
            # Start the containers with the latest image using the copied docker-compose file
            sudo docker compose up -d --pull always
